import React, { Component } from 'react';
import { View, AppRegistry, Text, StyleSheet, ImageBackground, TextInput, TouchableHighlight, Dimensions } from 'react-native';
import Constants from 'expo-constants';

let deviceHeight = Dimensions.get('window').height;
let deviceWidth = Dimensions.get('window').width;


export default class App extends Component {
    constructor(props) {
        super(props);
        this.state = {
            score: 0,
            homePage: 'block',
            mainDisplay: 'block',
            instructionsDisplay: 'none',
            board: [
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
            ],
            rowcheck: ["1", "2", "3", "4", "5", "6", "7", "8", "9"],
            columncheck: ["1", "2", "3", "4", "5", "6", "7", "8", "9"],
        };
    }

    reset = () => {
        this.setState({
            board: [
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
                ["", "", "", "", "", "", "", "", ""],
            ],
        });
    }

    handleEasyDisplayPagePress = () => this.setState({
        easyDisplay: 'block',
        mainDisplay: 'none',
        instructionsDisplay: 'none',
    });

    handleMainDisplayPagePress = () => this.setState({
        easyDisplay: 'none',
        mainDisplay: 'block',
        instructionsDisplay: 'none',
    });

    handleInstructionsDisplayPagePress = () => this.setState({
        easyDisplay: 'none',
        mainDisplay: 'none',
        instructionsDisplay: 'block',
    });

    randomBoardRender = () => {
        const newBoard = this.state.board.map(row => 
            row.map(() => Math.floor(Math.random() * 9 + 1))
        );
        this.setState({ board: newBoard });
    }

    editGameBoard = () => {
        if()
    }

    rules = () => {
        for(let i = 0; i < 9; i++) {
            for(let j = 0; j < 9; j++) {
                for(let k = 0; k < 9; k++) {
                    if (this.state.board[i][k] == this.state.board[i][j]) {
                        this.set(this.state.rowcheck[j] = 0)};
                    }
                    else {
                        for(let n= 0; n < 9; n++) {
                            this.set{this.rowcheck[j] == 0)};
                            this.set(this.state.board[i][k] = {this.state.rowcheck[n] != 0})
                        }
                    }
                    if (this.state.board[j][k] == this.state.board[j][i]) {
                        this.set(this.state.columncheck[i] = 0)};
                    }
                    else {
                        for(let n= 0; n < 9; n++) {
                            this.set{this.columncheck[j] == 0)};
                            this.set(this.state.board[i][k] = {this.state.columncheck[n] != 0})
                        }
                    }
                }
            }
        }
    }

    render() {
        return (
            <View style={styles.container}>
                <View style={styles.contentContainer}>
                    <Text>
                    
                    </Text>
                </View>
                
                <View style={styles.navbarContainer}>
                    <TouchableHighlight style={styles.navButton} onPress={this.handleMainDisplayPagePress}>
                        <Text style={styles.navButtonText}>Welcome</Text>
                    </TouchableHighlight>
                    
                    <TouchableHighlight style={styles.navButton} onPress={this.handleInstructionsDisplayPagePress}>
                        <Text style={styles.navButtonText}>Rules</Text>
                    </TouchableHighlight>
                    
                    <TouchableHighlight style={styles.navButton} onPress={this.handleEasyDisplayPagePress}>
                        <Text style={styles.navButtonText}>Easy Level</Text>
                    </TouchableHighlight>
                </View>
            </View>
        );
    }
}

const styles = StyleSheet.create({
    container: {
        height: deviceHeight,
        width: deviceWidth,
    },
    contentContainer: {
        height: 5 * (deviceHeight / 6),
        width: deviceWidth,
        alignItems: 'center',
        justifyContent: 'center',
        backgroundColor: 'lightblue',
    },
    navbarContainer: {
        height: deviceHeight / 6,
        width: deviceWidth,
        backgroundColor: 'darkblue',
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'center',
        borderTopWidth: 10,
        borderColor: 'white',
    },
    navButton: {
        height: deviceHeight / 14,
        width: deviceWidth / 4,
        backgroundColor: 'white',
        borderColor: 'lightblue',
        borderWidth: 2,
        alignItems: 'center',
        justifyContent: 'center',
        margin: 20,
    },
    navButtonText: {
        fontSize: deviceHeight / 40,
        textAlign: 'center',
        color: 'darkblue',
    },
});
