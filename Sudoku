import React, { Component } from 'react';
import { View, AppRegistry, Text, StyleSheet, ImageBackground, TextInput, TouchableHighlight, Dimensions } from 'react-native';
import Constants from 'expo-constants';

let deviceHeight = Dimensions.get('window').height;
let deviceWidth = Dimensions.get('window').width;

export default class App extends Component {
    state = {
        score: 0,
        easyDisplay: 'none',
        mainDisplay: 'block',
        instructionsDisplay: 'none',
        mediumDisplay: 'none',
        hardDisplay: 'none',
        gameBoard: [
            {
                square: 1,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 2,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 3,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 4,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 5,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 6,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 7,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 8,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
            {
                square: 9,
                num1: 0,
                num2: 0,
                num3: 0,
                num4: 0,
                num5: 0,
                num6: 0,
                num7: 0,
                num8: 0,
                num9: 0,
            },
        ]
    }
    
    handleEasyDisplayPagePress = () => this.setState(state => ({
        easyDisplay: 'block',
        mainDisplay: 'none',
        instructionsDisplay: 'none',
        mediumDisplay: 'none',
        hardDisplay: 'none',
    }));
    
        handleMainDisplayPagePress = () => this.setState(state => ({
        easyDisplay: 'none',
        mainDisplay: 'block',
        instructionsDisplay: 'none',
        mediumDisplay: 'none',
        hardDisplay: 'none',
    }));
    
        handleInstructionsDisplayPagePress = () => this.setState(state => ({
        easyDisplay: 'none',
        mainDisplay: 'none',
        instructionsDisplay: 'bock',
        mediumDisplay: 'none',
        hardDisplay: 'none',
    }));
    
        handleMediumDisplayPagePress = () => this.setState(state => ({
        easyDisplay: 'none',
        mainDisplay: 'none',
        instructionsDisplay: 'none',
        mediumDisplay: 'block',
        hardDisplay: 'none',
    }));
    
        handleHardDisplayPagePress = () => this.setState(state => ({
        easyDisplay: 'none',
        mainDisplay: 'none',
        instructionsDisplay: 'none',
        mediumDisplay: 'none',
        hardDisplay: 'block',
    }));
    
    
    //Creating a board with random numbers from 1-9 (doesn't matter order or how many for now)
    randomBoardRender = () => {
        this.state.gameBoard.splice(this.state.length, 0, {
            square: this.state.square,
            
        })
    }
    
    //Uses randomly created board and makes sure it fits all rules stated by rules method, then sets it as new board
    editGameBoard = () => {
        
    }
    
    rules = () => {
        if(this.state.gameBoard[i].num1 = this.state.gameBoard[j].num1) {
            this.state.gameBoard[i]
        }
    }
    
    
    
    
    render() {
        return (
            <View style={styles.container}>
                <Text style={styles.paragraph}>
                    Change code in the editor and watch it change on your phone!
                </Text>
            </View>
        );
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center',
    },
    rowContainer: {
        flexDirection: 'row',
        height: 70,
        width: 210,
    },
    box: {
        backgroundColor: 'white',
        borderColor: 'gray',
        height: 70,
        justifyContent: 'center',
        alignItems: 'center',
        width: 70,
        borderWidth: 5,
    },
    box2: {
        backgroundColor: 'gray',
        borderColor: 'black',
        justifyContent: 'center',
        alignItems: 'center',
        width: 70,
        hieght: 70,
    },
    blueBlock: {
        backgroundColor: 'darkblue',
        height: 50,
        width: 100,
        marginTop: 20,
        justifyContent: 'center',
        alignsItems: 'center',
    },
    player: {
        fontSize: 50,
        color: 'black',
    },
    titleText: {
        fontSize: 10,
        textAlign: 'center',
        color: 'white',
    },
    
});
